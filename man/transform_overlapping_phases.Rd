% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ground_truth_labels_and_config.R
\name{transform_overlapping_phases}
\alias{transform_overlapping_phases}
\title{Solves an issue of overlapping time windows of phases}
\usage{
transform_overlapping_phases(extended_visits, phases_with_confidence)
}
\arguments{
\item{extended_visits}{tibble; visits expanded to relevant time windows}

\item{phases_with_confidence}{tibble; time windows configurations enhanced with confidence value}
}
\value{
tibble; overlapping time windows are solved
}
\description{
When the visits of a patient are very close to each other, i.e. their time windows
intersect we need to decide which phase is valid. The most natural choice would be the one with
higher confidence and this is what this function offers.
Moreover, taking the point with maximum confidence may be not enough, for example in case when
the confidence is constantly equal 1. In this case the following criteria are taken into account:
\enumerate{
 \item{distance to the original visit date - minimize}
 \item{seniority of original visit dates - take the latter}
}
}
\examples{
# prepare sample data
patient_id <- 888
visit_date <- as.Date(c("2023-02-01", "2023-02-05"))

test_visits <- dplyr::tibble(
  patient_id = patient_id,
  visit_date = visit_date,
  visit_id = 1:2,
  phase = c("depression", "mania")
)

auto_conf <- auto_create_phases_config(test_visits, phase)
extended_test_visits <- expand_ground_truth_period(
  d = test_visits,
  config = auto_conf,
  phases_col = phase,
  visit_date_col = visit_date
)

# add confidence; toggle commented lines to try different scenarios
problematic <- add_confidence(
  auto_conf,
  # values = 1
  values = c(rep(c(1, .7), c(8, 2)))
  # func = dnorm
)

library(ggplot2)
ggplot(
  data = extended_test_visits,
  aes(y = problematic$confidence, x = date, color = as.factor(visit_id))
) +
  geom_point(position = position_jitter(height = 0.015, width = 0)) +
  geom_line(position = position_jitter(height = 0.015)) +
  ylim(c(-0.1, 1.1)) +
  geom_vline(aes(xintercept = visit_date, color = as.factor(visit_id)))

# solution
transform_overlapping_phases(extended_test_visits, problematic)
}
